package com.baogang.bycx.view;

import android.content.Context;
import android.text.TextUtils;
import android.util.AttributeSet;
import android.view.LayoutInflater;
import android.view.View;
import android.widget.ListView;
import android.widget.RelativeLayout;
import android.widget.TextView;

import com.baogang.bycx.R;
import com.baogang.bycx.adapter.UpdateAdapter;
import com.baogang.bycx.callback.AppUpdateResp;
import com.baogang.bycx.utils.CacheUtils;
import com.baogang.bycx.utils.DateUtil;
import com.baogang.bycx.utils.TVUtils;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class UpdateView extends RelativeLayout implements View.OnClickListener {
    private UpdateAdapter adapter;
    private List<String> bugList;
    private String updateContent;
    private HashMap<Integer, Integer> location = new HashMap<Integer, Integer>();
    private int i = 1;
    private int start = 0;
    private int end = 0;
    private String appSize;
    private String isUpdate = "false";

    public void setBugList() {
        adapter.setBuglist(bugList);
    }

    private UpdateListener listener;

    public void setListener(UpdateListener listener) {
        this.listener = listener;
    }

    public UpdateView(Context context) {
        super(context);
        init(context);
    }

    public UpdateView(Context context, AttributeSet attrs) {
        super(context, attrs);
        init(context);
    }

    public UpdateView(Context context, AttributeSet attrs, int defStyleAttr) {
        super(context, attrs, defStyleAttr);
        init(context);
    }

    private void init(Context context) {
        View view = LayoutInflater.from(context).inflate(R.layout.view_main_update, this);
        view.setOnClickListener(null);
        TextView tvUpdateTipsCancel = (TextView) view.findViewById(R.id.tv_update_tips_cancel);
        findViewById(R.id.tv_update_tips_ok).setOnClickListener(this);
        tvUpdateTipsCancel.setOnClickListener(this);
        TextView tvAppVersion = (TextView) view.findViewById(R.id.tv_app_version);
        TextView tvAppSize = (TextView) view.findViewById(R.id.tv_app_size);
        TextView tvAppTime = (TextView) view.findViewById(R.id.tv_app_time);
        if (adapter == null) {
            adapter = new UpdateAdapter(context);
        }
        if (bugList == null) {
            bugList = new ArrayList<>();
        }
        AppUpdateResp appUpdateResp = CacheUtils.getIn().getappInfo();
        if (appUpdateResp != null) {
            tvAppVersion.setText("版本:" + appUpdateResp.getVersionNo());
            tvAppTime.setText("更新时间:" + DateUtil.getStringFromTimestamp(appUpdateResp.getCreateTime()));
            if (!TextUtils.isEmpty(appUpdateResp.getSize())) {
                appSize = TVUtils.toAppString((String.valueOf(Double.parseDouble(appUpdateResp.getSize()) / 1024)));
                tvAppSize.setText("大小:" + appSize + "M");
            } else {
                tvAppSize.setText("大小:0M");
            }
            updateContent = appUpdateResp.getDescribe();
            if (!TextUtils.isEmpty(updateContent)) {
                Pattern p = Pattern.compile("[0-9\\.]+");
                Matcher m = p.matcher(updateContent);
                while (m.find()) {
                    location.put(i, updateContent.indexOf(m.group()));
                    i++;
                }
                if (location.size() > 0) {
                    for (int i = 1; i < location.size() + 1; i++) {
                        if (i < location.size()) {
                            start = location.get(i);
                            end = location.get(i + 1);
                        } else if (i == location.size()) {
                            start = location.get(i);
                            end = updateContent.length();
                        }
                        bugList.add(updateContent.substring(start, end));
                    }
                } else if (location.size() == 0) {
                    bugList.add(updateContent);
                }
            }
            isUpdate = appUpdateResp.getIsForce();
            if (!TextUtils.isEmpty(isUpdate) && isUpdate.equals("true")) {
                tvUpdateTipsCancel.setVisibility(GONE);
            } else {
                tvUpdateTipsCancel.setVisibility(VISIBLE);
            }
        }
        adapter.setBuglist(bugList);
        ((ListView) findViewById(R.id.lv_bug_list)).setAdapter(adapter);
    }

    @Override
    public void onClick(View v) {
        switch (v.getId()) {
            case R.id.tv_update_tips_ok:
                if (listener != null) {
                    listener.confirm(isUpdate);
                }
                break;
            case R.id.tv_update_tips_cancel:
                if (listener != null) {
                    listener.cancel();
                }
                break;
        }
    }

    public interface UpdateListener {
        void cancel();

        void confirm(String isUpdate);
    }
}
