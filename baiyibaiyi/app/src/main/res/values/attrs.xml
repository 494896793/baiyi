<?xml version="1.0" encoding="utf-8"?>
<resources>

    <declare-styleable name="PagerSlidingTabStrip">
        <attr name="pstsIndicatorColor" format="color" />
        <attr name="pstsUnderlineColor" format="color" />
        <attr name="pstsDividerColor" format="color" />
        <attr name="pstsIndicatorHeight" format="dimension" />
        <attr name="pstsUnderlineHeight" format="dimension" />
        <attr name="pstsDividerPadding" format="dimension" />
        <attr name="pstsTabPaddingLeftRight" format="dimension" />
        <attr name="pstsScrollOffset" format="dimension" />
        <attr name="pstsTabBackground" format="reference" />
        <attr name="pstsShouldExpand" format="boolean" />
        <attr name="pstsTextAllCaps" format="boolean" />
    </declare-styleable>

    <declare-styleable name="CustomProgressBar">
        <!-- 圆形进度条进度显示的颜色 -->
        <attr name="roundProgressColor" format="color"></attr>
        <!-- 外圈圆的颜色 -->
        <attr name="roundColor" format="color"></attr>
        <!-- 圆的总宽度 -->
        <attr name="roundWidth" format="dimension"></attr>
        <!-- 字体显示的大小 -->
        <attr name="textSize" format="dimension"></attr>
        <!-- 字体显示的颜色　-->
        <attr name="textColor" format="color"></attr>
        <!-- 进度的最大值 -->
        <attr name="max" format="integer"></attr>
        <!-- 是否显示文字 -->
        <attr name="textShow" format="boolean"></attr>
    </declare-styleable>

    <declare-styleable name="RatingBar">
        <!--星星间距-->
        <attr format="dimension" name="starDistance"/>
        <!--星星大小-->
        <attr format="dimension" name="starSize"/>
        <!--星星个数-->
        <attr format="integer" name="starCount"/>
        <!--星星空图-->
        <attr format="reference" name="starEmpty"/>
        <!--星星满图-->
        <attr format="reference" name="starFill"/>
    </declare-styleable>

    <declare-styleable name="PullToRefresh">

        <!-- A drawable to use as the background of the Refreshable View -->
        <attr name="ptrRefreshableViewBackground" format="reference|color" />

        <!-- A drawable to use as the background of the Header and Footer Loading Views -->
        <attr name="ptrHeaderBackground" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views -->
        <attr name="ptrHeaderTextColor" format="reference|color" />

        <!-- Text Color of the Header and Footer Loading Views Sub Header -->
        <attr name="ptrHeaderSubTextColor" format="reference|color" />

        <!-- Mode of Pull-to-Refresh that should be used -->
        <attr name="ptrMode">
            <flag name="disabled" value="0x0" />
            <flag name="pullFromStart" value="0x1" />
            <flag name="pullFromEnd" value="0x2" />
            <flag name="both" value="0x3" />
            <flag name="manualOnly" value="0x4" />

            <!-- These last two are depreacted -->
            <flag name="pullDownFromTop" value="0x1" />
            <flag name="pullUpFromBottom" value="0x2" />
        </attr>

        <!-- Whether the Indicator overlay(s) should be used -->
        <attr name="ptrShowIndicator" format="reference|boolean" />

        <!-- Drawable to use as Loading Indicator. Changes both Header and Footer. -->
        <attr name="ptrDrawable" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Header View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableStart" format="reference" />

        <!-- Drawable to use as Loading Indicator in the Footer View. Overrides value set in ptrDrawable. -->
        <attr name="ptrDrawableEnd" format="reference" />

        <!-- Whether Android's built-in Over Scroll should be utilised for Pull-to-Refresh. -->
        <attr name="ptrOverScroll" format="reference|boolean" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views -->
        <attr name="ptrHeaderTextAppearance" format="reference" />

        <!-- Base text color, typeface, size, and style for Header and Footer Loading Views Sub Header -->
        <attr name="ptrSubHeaderTextAppearance" format="reference" />

        <!-- Style of Animation should be used displayed when pulling. -->
        <attr name="ptrAnimationStyle">
            <flag name="rotate" value="0x0" />
            <flag name="flip" value="0x1" />
        </attr>

        <!-- Whether the user can scroll while the View is Refreshing -->
        <attr name="ptrScrollingWhileRefreshingEnabled" format="reference|boolean" />

        <!--
        	Whether PullToRefreshListView has it's extras enabled. This allows the user to be
        	able to scroll while refreshing, and behaves better. It acheives this by adding
        	Header and/or Footer Views to the ListView.
        -->
        <attr name="ptrListViewExtrasEnabled" format="reference|boolean" />

        <!--
        	Whether the Drawable should be continually rotated as you pull. This only
        	takes effect when using the 'Rotate' Animation Style.
        -->
        <attr name="ptrRotateDrawableWhilePulling" format="reference|boolean" />

        <!-- BELOW HERE ARE DEPRECEATED. DO NOT USE. -->
        <attr name="ptrAdapterViewBackground" format="reference|color" />
        <attr name="ptrDrawableTop" format="reference" />
        <attr name="ptrDrawableBottom" format="reference" />
    </declare-styleable>

    <array name="entities">
        <item>sdlfgfdadlf</item>
        <item>sdlfgfdfdlf</item>
        <item>sdlfdgfddlf</item>
        <item>sdlffdffgdfgfgdlf</item>
        <item>sdlfdlf</item>
        <item>sdlfdlf</item>
        <item>sdlfadfddlf</item>
        <item>sdlfdlf</item>
        <item>sdlfasfdasdlf</item>
        <item>sdlffdsfddfdlf</item>
        <item>sdlfdlf</item>
        <item>sdlfdfdsfdlf</item>
        <item>sdlfafdafgdfgfdgdlf</item>
        <item>sdlffadlf</item>
        <item>sdlffdfsdlf</item>
        <item>sdlfdfadlf</item>
        <item>sdlffdsfdlf</item>
        <item>sdlffadlf</item>
        <item>sdlffdadlf</item>
        <item>sdlfdfsfdlf</item>
        <item>sdlffdadlf</item>
        <item>sdlfdlf</item>
        <item>sdlffdgfdlf</item>
        <item>sdlfdlf</item>
        <item>sdlffafsdfgddlf</item>
        <item>sdlffdfdlf</item>
        <item>sdlfdlf</item>
        <item>sdlfafdagsgdlf</item>
        <item>sdlfdlf</item>
        <item>sdlfdlf</item>
        <item>sdlfgfgdlf</item>
        <item>sdlfgfgfdlf</item>
        <item>sdlfdlf</item>
        <item>sdlfgfdlf</item>
        <item>sdlfdlf</item>
        <item>sdlfdgfdfdlf</item>
        <item>sdlfdlf</item>
        <item>sdlgfdgffdlf</item>
        <item>sdlfgdfgfdlf</item>
        <item>sdlfdfgddlf</item>
    </array>
    <declare-styleable name="LazyViewPager">
        <attr name="init_lazy_item_offset" format="float" />
    </declare-styleable>


    <declare-styleable name="CircularProgressView">
        <attr name="cpv_text_prefix" format="string"/>
        <attr name="cpv_text_suffix" format="string"/>
        <attr name="cpv_progress" format="integer" />
        <attr name="cpv_circle_color" format="color" />
        <attr name="cpv_background_circle_color" format="color" />
        <attr name="cpv_text_color" format="color"/>
        <attr name="cpv_text_size" format="integer" />
        <attr name="cpv_circle_width" format="dimension" />
        <attr name="cpv_background_circle_width" format="dimension" />
    </declare-styleable>
</resources>